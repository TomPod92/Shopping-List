{"version":3,"sources":["components/Navigation.js","components/PageAddProduct.js","components/Section.js","components/PageShop.js","components/PageShoppingList.js","firebase/firebase.js","components/App.js","index.js"],"names":["Navigation","props","react_default","a","createElement","className","react_router_dom","to","exact","numberOfProducts","PageAddProduct","state","name","type","handleChange","event","target","value","trim","length","_this","setState","Object","defineProperty","toLowerCase","_this2","this","onSubmit","preventDefault","handleAddProduct","htmlFor","id","onChange","required","placeholder","React","Component","Section","list","productList","map","currentProduct","toBuy","bought","inShoppingList","key","productid","onClick","handleClickOnProduct","flag","firebaseKey","handleRemoveFromShoppingList","handleRemoveFromShop","PageShop","typeIDsArray","currentID","index","components_Section","products","filter","PageShoppingList","handleDeleteShoppingList","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","App","item","findIndex","current","newID","newTypeID","newProduct","typeID","prevState","concat","toConsumableArray","ref","push","nodeName","newState","update","forEach","splice","remove","componentDidMount","on","snapshot","objectSpread","val","toBuyProducts","components_Navigation","react_router","path","render","components_PageAddProduct","components_PageShop","components_PageShoppingList","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7015a61.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport '../styles/navigation.scss'\r\n\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <header>\r\n        <nav>\r\n          <ul className=\"main-Nav\">\r\n            <li className=\"nav-item\"><NavLink to=\"/\" exact className=\"link\">Dodaj produkt</NavLink></li>\r\n            <li className=\"nav-item\"><NavLink to=\"/pageShop\" className=\"link\">Sklep</NavLink></li>\r\n            <li className=\"nav-item\"><NavLink to=\"/pageShoppinglist\" className=\"link\">Lista zakup√≥w ({props.numberOfProducts})</NavLink></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"../styles/PageAddProduct.scss\";\r\n\r\nclass PageAddProduct extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    type: \"pieczywo\"\r\n  };\r\n\r\n  handleChange = event => {\r\n    // check if the imput consists only white spaces\r\n    // if it does do not update the state with it\r\n    if (!event.target.value.trim().length) {\r\n      event.target.value = \"\";\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.name]: event.target.value.toLowerCase()\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"formWrapper\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            this.setState({\r\n              name: \"\",\r\n              type: \"pieczywo\"\r\n            });\r\n            this.props.handleAddProduct(this.state);\r\n          }}\r\n          className=\"form\"\r\n        >\r\n          {/* Input z nazwa produktu */}\r\n          <label htmlFor=\"name\" className=\"form__label\">\r\n            Wpisz nazwƒô produktu\r\n          </label>\r\n\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n            placeholder=\"np.chleb tostowy\"\r\n            className=\"form__input\"\r\n          />\r\n          {/* Input z dzia≈Çem danego produktu */}\r\n          <label htmlFor=\"type\" className=\"form__label\">\r\n            Podaj dzia≈Ç\r\n          </label>\r\n\r\n          <select\r\n            id=\"type\"\r\n            name=\"type\"\r\n            value={this.state.type}\r\n            onChange={this.handleChange}\r\n            className=\"form__input\"\r\n          >\r\n            <option value=\"pieczywo\">Pieczywo</option>\r\n            <option value=\"owoce i warzywa\">Owoce i warzywa</option>\r\n            <option value=\"nabia≈Ç\">Nabia≈Ç</option>\r\n            <option value=\"miƒôsa i sery\">Miƒôsa i sery</option>\r\n            <option value=\"mro≈ºonki i przyprawy\">Mro≈ºonki i przyprawy</option>\r\n            <option value=\"s≈Çoiki i puszki\">Puszki i s≈Çoiki</option>\r\n            <option value=\"kawa i herbata\">Kawa i herbata</option>\r\n            <option value=\"makarony\">Makarony i ry≈º</option>\r\n            <option value=\"s≈Çodycze\">S≈Çodycze</option>\r\n            <option value=\"≈õrodki czysto≈õci\">≈örodki czysto≈õci</option>\r\n            <option value=\"napoje\">Napoje</option>\r\n            <option value=\"alkohole\">Alkohole</option>\r\n            <option value=\"art.papiernicze\">Art.papiernicze</option>\r\n            <option value=\"kosmetyki\">Kosmetyki</option>\r\n            <option value=\"ubrania\">Ubrania</option>\r\n          </select>\r\n\r\n          <button className=\"form__button\">Dodaj produkt</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageAddProduct;\r\n","import React from \"react\";\r\nimport \"../styles/section.scss\";\r\n\r\n// set class Names for single product depending on its state: toBuy, bought, where is it (in Shop or in Shopping List)\r\nconst determineStyles = (toBuy, bought, inShoppingList) => {\r\n  if (!toBuy && !bought && !inShoppingList) return \"default section--item\";\r\n  else if (toBuy && !bought && inShoppingList) return \"default section--item\";\r\n  else if (toBuy && !bought && !inShoppingList) return \"grey section--item\";\r\n  else if (toBuy && bought && inShoppingList) return \"grey section--item\";\r\n  else if (toBuy && bought && !inShoppingList) return \"grey section--item\";\r\n};\r\n//----------------------------------\r\n\r\nconst Section = props => {\r\n  const list = props.productList.map(currentProduct => {\r\n    return (\r\n      <li\r\n        className={determineStyles(currentProduct.toBuy,currentProduct.bought,props.inShoppingList\r\n        )}\r\n        key={currentProduct.id}\r\n        productid={currentProduct.id}\r\n        onClick={event =>\r\n          props.handleClickOnProduct(currentProduct.id, props.flag, currentProduct.firebaseKey, event)\r\n        }\r\n      >\r\n        <span className=\"section--item__text\">{currentProduct.name}</span>\r\n\r\n        {/* create button to remove */}\r\n        {/* if it is in the shopping list page send it \"handleRemoveFromShoppingList\" function */}\r\n        {/* if it is in products page send it \"handleRemoveFromShop\" function */}\r\n        {props.inShoppingList ? (\r\n          <button\r\n            className=\"section--item__button\"\r\n            onClick={() =>\r\n              props.handleRemoveFromShoppingList(currentProduct.id, currentProduct.firebaseKey)\r\n            }\r\n          >\r\n            Usu≈Ñ\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"section--item__button\"\r\n            onClick={() => props.handleRemoveFromShop(currentProduct.id, currentProduct.firebaseKey)}\r\n          >\r\n            Usu≈Ñ\r\n          </button>\r\n        )}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  // if that section doesnt have any products inside do not render it\r\n  if (props.productList.length) {\r\n    return (\r\n      <div className=\"section\">\r\n        <h2 className=\"section--header\">{props.type}</h2>\r\n        {/* className moze miec pare slow oddzielonych spacja */}\r\n        <ul className=\"section--list\">{list}</ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Section from \"./Section.js\";\r\n\r\nconst PageShop = props => {\r\n  return (\r\n    <div>\r\n      {props.typeIDsArray.map((currentID, index) => (\r\n        <Section\r\n          key={index}\r\n          type={currentID}\r\n          productList={props.products.filter(\r\n            currentProduct => currentProduct.type === currentID\r\n          )}\r\n          handleClickOnProduct={props.handleClickOnProduct}\r\n          flag={\"toBuy\"}\r\n          inShoppingList={false}\r\n          handleRemoveFromShop={props.handleRemoveFromShop}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageShop;\r\n","import React from \"react\";\r\nimport Section from \"./Section.js\";\r\n\r\nconst PageShoppingList = props => {\r\n  return (\r\n    <div>\r\n      {props.typeIDsArray.map((currentID, index) => (\r\n        <Section\r\n          key={index}\r\n          type={currentID}\r\n          productList={props.products.filter(\r\n            currentProduct => currentProduct.type === currentID\r\n          )}\r\n          handleClickOnProduct={props.handleClickOnProduct}\r\n          handleRemoveFromShoppingList={props.handleRemoveFromShoppingList}\r\n          flag={\"bought\"}\r\n          inShoppingList={true}\r\n        />\r\n      ))}\r\n\r\n      {/* display \"delete button\" only if there are any product in shopping list */}\r\n      {props.products.length ? (\r\n        <button\r\n          className=\"deleteButton\"\r\n          onClick={props.handleDeleteShoppingList}\r\n        >\r\n          Usu≈Ñ listƒô zakup√≥w\r\n        </button>\r\n      ) : null}\r\n\r\n      {props.products.length === 0 && (\r\n        <div className=\"userInfo\">Nie masz nic w koszyku :(</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageShoppingList;\r\n","import * as firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAadHGx1CFCW84dLB38KRMqG8-wGL0IfSc\",\r\n  authDomain: \"shopping-list-ef1c7.firebaseapp.com\",\r\n  databaseURL: \"https://shopping-list-ef1c7.firebaseio.com\",\r\n  projectId: \"shopping-list-ef1c7\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"701096141827\",\r\n  appId: \"1:701096141827:web:590ac1df40e02324\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst database = firebase.database();\r\n\r\nexport { firebase, database as default };\r\n","import React from \"react\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation.js\";\r\nimport PageAddProduct from \"./PageAddProduct.js\";\r\nimport PageShop from \"./PageShop.js\";\r\nimport PageShoppingList from \"./PageShoppingList.js\";\r\nimport database from '../firebase/firebase.js';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    products: [\r\n      // {\r\n      //   id: 0,\r\n      //   name: \"chleb\",\r\n      //   type: \"pieczywo\",\r\n      //   typeID: 0,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 1,\r\n      //   name: \"papryka\",\r\n      //   type: \"owoce i warzywa\",\r\n      //   typeID: 1,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: \"jajka\",\r\n      //   type: \"nabia≈Ç\",\r\n      //   typeID: 2,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: \"szynka\",\r\n      //   type: \"miƒôsa i sery\",\r\n      //   typeID: 3,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 4,\r\n      //   name: \"czosnek\",\r\n      //   type: \"mro≈ºonki i przyprawy\",\r\n      //   typeID: 4,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 5,\r\n      //   name: \"fasolka\",\r\n      //   type: \"s≈Çoiki i puszki\",\r\n      //   typeID: 5,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 6,\r\n      //   name: \"herbata\",\r\n      //   type: \"kawa i herbata\",\r\n      //   typeID: 6,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 7,\r\n      //   name: \"ry≈º\",\r\n      //   type: \"makarony\",\r\n      //   typeID: 7,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 8,\r\n      //   name: \"czekolada\",\r\n      //   type: \"s≈Çodycze\",\r\n      //   typeID: 8,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 9,\r\n      //   name: \"papier toaletowy\",\r\n      //   type: \"≈õrodki czysto≈õci\",\r\n      //   typeID: 9,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 10,\r\n      //   name: \"woda\",\r\n      //   type: \"napoje\",\r\n      //   typeID: 10,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 11,\r\n      //   name: \"piwo\",\r\n      //   type: \"alkohole\",\r\n      //   typeID: 11,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 12,\r\n      //   name: \"zeszyt\",\r\n      //   type: \"art.papiernicze\",\r\n      //   typeID: 12,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 13,\r\n      //   name: \"pasta\",\r\n      //   type: \"kosmetyki\",\r\n      //   typeID: 13,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // },\r\n      // {\r\n      //   id: 14,\r\n      //   name: \"kapcie\",\r\n      //   type: \"ubrania\",\r\n      //   typeID: 14,\r\n      //   toBuy: false,\r\n      //   bought: false\r\n      // }\r\n    ]\r\n  };\r\n\r\n  typeIDsArray = [\r\n    \"pieczywo\",\r\n    \"owoce i warzywa\",\r\n    \"nabia≈Ç\",\r\n    \"miƒôsa i sery\",\r\n    \"mro≈ºonki i przyprawy\",\r\n    \"s≈Çoiki i puszki\",\r\n    \"kawa i herbata\",\r\n    \"makarony\",\r\n    \"s≈Çodycze\",\r\n    \"≈õrodki czysto≈õci\",\r\n    \"napoje\",\r\n    \"alkohole\",\r\n    \"art.papiernicze\",\r\n    \"kosmetyki\",\r\n    \"ubrania\"\r\n  ];\r\n\r\n  handleAddProduct = item => {\r\n    // check if it already exists\r\n    const index = this.state.products.findIndex(\r\n      current => current.name === item.name\r\n    );\r\n\r\n    // if it doesnt exits\r\n    if (!(index + 1)) {\r\n      // calculate its ID\r\n      let newID;\r\n      if(!this.state.products.length) newID = 0;\r\n      else newID = this.state.products[this.state.products.length - 1].id + 1;\r\n      \r\n\r\n      // calculate its type ID\r\n      const newTypeID = this.typeIDsArray.findIndex(\r\n        current => current === item.type\r\n      );\r\n\r\n      // create product object\r\n      const newProduct = {\r\n        id: newID,\r\n        name: item.name,\r\n        type: item.type,\r\n        typeID: newTypeID,\r\n        toBuy: false,\r\n        bought: false\r\n      };\r\n\r\n      // add it to the state\r\n      this.setState(prevState => ({\r\n        products: [...prevState.products, newProduct]\r\n      }));\r\n\r\n      // add it to firebase\r\n      database.ref('products').push(newProduct);\r\n    }\r\n  };\r\n\r\n  handleClickOnProduct = (id, flag, firebaseKey, event) => {\r\n    // check if button in shopping list was clicked\r\n    // it it was, do not do anything (run its own function)\r\n    // when you click on that button both function will run otherwise\r\n    if (event.target.nodeName === \"BUTTON\") return;\r\n\r\n    // find id and index of clicked element\r\n    const index = this.state.products.findIndex(current => current.id === id);\r\n\r\n    // create a copy of state\r\n    const newState = this.state.products;\r\n\r\n    // change clicked element \"toBuy\" or \"bought\" (depending on flag = 'toBuy' or 'bought')\r\n    if (flag === \"toBuy\") {\r\n      database.ref(`products/${firebaseKey}`).update({\r\n        toBuy: !newState[index].toBuy,\r\n        bought: false\r\n      })\r\n\r\n      newState[index].toBuy = !newState[index].toBuy;\r\n      newState[index].bought = false;\r\n    } else if (flag === \"bought\") {\r\n      database.ref(`products/${firebaseKey}`).update({\r\n        bought: !newState[index].bought\r\n      })\r\n\r\n      newState[index].bought = !newState[index].bought;\r\n      \r\n    }\r\n\r\n    // update the state with the new element\r\n    this.setState({\r\n      products: newState\r\n    });\r\n  };\r\n\r\n  handleDeleteShoppingList = () => {\r\n    // create a copy o state\r\n    let newState = this.state.products;\r\n\r\n    // change \"toBuy\" and \"bought\" properties for all products to false (it will delete them from shopping list)\r\n    // update the firebase data as well\r\n    newState.forEach(current => {\r\n      current.toBuy = false;\r\n      current.bought = false;\r\n\r\n      database.ref(`products/${current.firebaseKey}`).update({\r\n        toBuy: false,\r\n       bought: false\r\n      })\r\n    });\r\n\r\n    // update the state\r\n    this.setState({\r\n      products: newState\r\n    });\r\n  };\r\n\r\n  handleRemoveFromShoppingList = (id, firebaseKey) => {\r\n    // create a copy of the state\r\n    const products = this.state.products;\r\n\r\n    // find index of clicked product\r\n    const index = products.findIndex(current => current.id === id);\r\n\r\n    // set its \"toBuy\" and \"bought\" values to false (remove it from shopping list)\r\n    products[index].toBuy = false;\r\n    products[index].bought = false;\r\n\r\n    // update the state\r\n    this.setState({\r\n      products\r\n    });\r\n\r\n    // update firebase\r\n    database.ref(`products/${firebaseKey}`).update({\r\n      toBuy: false,\r\n      bought: false\r\n    })\r\n  };\r\n\r\n  handleRemoveFromShop = (id, firebaseKey) => {\r\n    // create a copy of the state\r\n    const products = this.state.products;\r\n\r\n    // find index of clicked product\r\n    const index = products.findIndex(current => current.id === id);\r\n\r\n    // delete it from products list\r\n    products.splice(index, 1);\r\n\r\n    // update the state\r\n    this.setState({\r\n      products\r\n    });\r\n\r\n    // remove it from firebase\r\n    database.ref(`products/${firebaseKey}`).remove();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // when app is redered for the first time\r\n    // get everything from the database\r\n    database.ref('products').on('value', (snapshot) => {\r\n      const products = [];\r\n\r\n      // add everything to the array\r\n      snapshot.forEach( current => {\r\n        products.push({\r\n          firebaseKey: current.key,\r\n          ...current.val()\r\n        })\r\n      })\r\n\r\n      // check if that array is empty\r\n      if(products.length === 0) return;\r\n\r\n      // if it is not, add it to the state\r\n      this.setState({products})\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const toBuyProducts = this.state.products.filter(\r\n      current => current.toBuy === true\r\n    ).length;\r\n    return (\r\n      <HashRouter>\r\n        <Navigation numberOfProducts={toBuyProducts} />\r\n\r\n        <section>\r\n          <Switch>\r\n            <Route\r\n              path={[\"/\", \"/Shopping-List/\"]}\r\n              exact\r\n              render={() => (\r\n                <PageAddProduct handleAddProduct={this.handleAddProduct} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/pageShop\"\r\n              render={() => (\r\n                <PageShop\r\n                  products={this.state.products}\r\n                  typeIDsArray={this.typeIDsArray}\r\n                  handleClickOnProduct={this.handleClickOnProduct}\r\n                  handleRemoveFromShop={this.handleRemoveFromShop}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/pageShoppinglist\"\r\n              render={() => (\r\n                <PageShoppingList\r\n                  products={this.state.products.filter(\r\n                    currentProduct => currentProduct.toBuy === true\r\n                  )}\r\n                  typeIDsArray={this.typeIDsArray}\r\n                  handleClickOnProduct={this.handleClickOnProduct}\r\n                  handleDeleteShoppingList={this.handleDeleteShoppingList}\r\n                  handleRemoveFromShoppingList={\r\n                    this.handleRemoveFromShoppingList\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              render={() => (\r\n                <div className=\"userInfo\">Ups, co≈õ posz≈Ço nie tak :(</div>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </section>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}